
-- WHAT TO EXPECT IN THIS PROJECT
-- 1)Name of Database                     --1) Prepare a list of offices sorted by country, state, city.
-- 2) How many employees are there in the company?      -- 3)What is the total of payments received?
-- 4)List the product lines that contain 'Cars'.         -- 5)Report total payments for October 28, 2004.
-- 6)Report those payments greater than \$100,000.         -- 7)List the products in each product line.
-- 8)How many products in each product line?                 -- 9)What is the minimum payment received?
-- 10)List all payments greater than twice the average payment.   -- 11)What is the average percentage markup of the MSRP on buyPrice?
-- 12)How many distinct products does ClassicModels sell?         -- 13)Report the name and city of customers who don't have sales representatives?
-- 14)What are the names of executives with VP or Manager in         
-- their title? Use the CONCAT function to combine the employee's first name and last name into a single field for reporting.
-- 15)Which orders have a value greater than $5,000? 
16)Report the total number of payments received before October 28, 2004.
17) Report the number of customer who have made payments before October 28, 2004
-- 18) List the largest single payment done by every customer in the year 2004, ordered by the transaction value (highest to lowest).
-- 19) Show the total payments received month by month for every year.
-- 20) For the above query, format the amount properly with a dollar symbol and comma separation (e.g $26,267.62), and also show the month as a string.
--  21)Display a paginated list of customers (sorted by customer name), with a country code column. The country is simply the first 3 letters in the country name, in lower case.
  -- 22) Show the 10 most recent payments with customer details (name & phone no.).
  -- 23) Show a list of employees with the name & employee number of their manager.
  -- 24)Report the account representative for each customer
 -- 25)1Reports those products that have been sold with a markup of 100% or more (i.e., the priceEach is at least twice the buyPrice)
-- 26) "Create an SQL view named usaCustomers that retrieves all information from the customers table for customers whose country is 'USA'.
and report all customers who live in nevada with a creditlimit of 1000 or less

    This queries involves using, all forms of functions like JOINS, VIEWS,INDEX, GROUP BY, ORDER BY,AND OTHER COMPLEX FUNCTIONS

SHOW databases;
USE Classicmodels;

                   -- This dataset is new to me so from time to time I use the describe and show function to remind me of the details of each table.
                       -- 2) Prepare a list of offices sorted by country, state, city
 SHOW tables; 
--  describe offices;
 select officeCode,country , state, city 
 FROM offices;
                         -- 3) How many employees are there in the company?
describe employees;
SELECT COUNT(DISTINCT employeeNumber) as NumberOf_Employees
FROM employees;					
					-- 4)What is the total of payments received?
DESCRIBE payments; 
SELECT concat("$",ROUND(SUM(amount),'5')) as TotalPaymentsReceived
FROM payments;

-- CLEARLY THE QUESTION DIDINT ASK TO ROUND OR ADD THE DOLLAR SIGN BUT I DID IT ANYWAY TO MAKE IT LOOK NICER
                  
                  -- 5)List the product lines that contain 'Cars'
DESCRIBE productlines;
SELECT * from productlines
WHERE productline like '%cars%';

                       -- 5)Report total payments for October 28, 2004.
DESCRIBE payments;
SELECT  paymentdate, CONCAT('$',SUM(amount)) as Total_Payments
FROM payments
WHERE paymentDate = '2004-11-28';

                           -- 6)Report those payments greater than \$100,000.
SELECT amount 
FROM Payments
WHERE amount > 100000;
					     -- 7)List the products in each product line
DESCRIBE products;
SELECT (productline),productname
FROM products
ORDER BY productline;
                          -- 8)How many products in each product line?
SELECT productline, COUNT(productcode) as NumberOfProducts
FROM products
GROUP BY productline;
                            -- 9)What is the minimum payment received?
SELECT MIN(amount) as MinimumAmount
FROM payments;
                                 -- 10)List all payments greater than twice the average payment
SELECT amount
FROM payments
WHERE amount > (SELECT AVG(amount) * 2 FROM payments);
       
				-- 11)What is the average percentage markup of the MSRP on buyPrice?
 SHOW TABLES;
 DESCRIBE products;
select ROUND( AVG(ROUND(msrp - buyprice)/buyprice*100),2) as AVG_percentage_markup
FROM products;                
	              
                   -- 12)How many distinct products does ClassicModels sell?
                   
SELECT  COUNT(productcode) as numberofproducts
FROM products;

                     -- 13)Report the name and city of customers who don't have sales representatives?
 SHOW TABLES;
 DESCRIBE customers;
 select customername, city,salesrepemployeenumber
 from Customers
 WHERE salesRepEmployeeNumber is Null;  
 
                    -- 14)What are the names of executives with VP or Manager in
-- their title? Use the CONCAT function to combine the employee's first name and last name into a single field for reporting.

DESCRIBE employees;
SELECT concat(Firstname,' ',Lastname) as Fullname
FROM employees
WHERE jobtitle like '%vp%' OR '%manager%';

-- 16) Report the total number of payments received before October 28, 2004.

SELECT COUNT(*) FROM payments WHERE paymentDate<"2004-10-28";

-- 17) Report the number of customer who have made payments before October 28, 2004

SELECT COUNT(DISTINCT customerNumber) FROM payments WHERE paymentDate<"2004-10-28";

-- 18) List the largest single payment done by every customer in the year 2004, ordered by the transaction value (highest to lowest).

SELECT customerNumber, 
	MAX(amount) AS largestPayment 
    FROM payments 
    WHERE YEAR(paymentDate)=2004 
    GROUP BY customerNumber 
    ORDER BY largestPayment DESC;

-- 19) Show the total payments received month by month for every year.

SELECT YEAR(paymentDate) as `year`, 
	MONTH(paymentDate) as `month`, 
	ROUND(SUM(amount), 2) as `totalPayments`
    FROM payments 
    GROUP BY `year`, `month` 
    ORDER BY `year`, `month`;

-- 20) For the above query, format the amount properly with a dollar symbol and comma separation (e.g $26,267.62), and also show the month as a string.

SELECT YEAR(paymentDate) as `year`, 
	DATE_FORMAT(paymentDate, "%b") AS `monthName`, 
	CONCAT("$",format(SUM(amount),2) ) AS `totalPayments`
    FROM payments 
    GROUP BY `year`, MONTH(paymentDate), `monthName` 
    ORDER BY `year`, MONTH(paymentDate);

--  21)Display a paginated list of customers (sorted by customer name), with a country code column. The country is simply the first 3 letters in the country name, in lower case.

select customerName, 
	LCASE(SUBSTRING(country, 1, 3)) 
    AS countryCode 
    FROM customers ORDER BY customerName;    
    
    
   -- 22) Show the 10 most recent payments with customer details (name & phone no.).

SELECT checkNumber, paymentDate, amount, customers.customerNumber, customerName, phone 
	FROM payments JOIN customers 
    ON payments.customerNumber=customers.customerNumber 
    ORDER BY paymentDate DESC LIMIT 10;
    
    -- 23) Show a list of employees with the name & employee number of their manager.
describe employees
select E.employeeNumber, 
	E.firstName, 
    E.lastName, 
    M.employeeNumber as managerEmployeeNumber, 
    CONCAT(M.firstName, " ", M.lastName) as managerName
    from employees E LEFT JOIN employees M ON E.reportsTo=M.employeeNumber;
    
    -- 24)Report the account representative for each customer

    SELECT customername,customers.salesrepemployeenumber,employees.lastname,employees.firstname
    FROM customers join employees
    ON salesrepemployeenumber=employees.employeenumber;
    
   -- 25)1Reports those products that have been sold with a markup of 100% or more (i.e., the priceEach is at least twice the buyPrice)

describe orderdetails   
describe products 

    select orderdetails.productcode, products.productname,priceeach,buyprice
    FROM orderdetails JOIN products 
    ON orderdetails.productcode=products.productcode
    WHERE priceeach >= (buyprice *2);
    
-- 26) "Create an SQL view named usaCustomers that retrieves all information from the customers table for customers whose country is 'USA'.
  and report all customers who live in nevada with a creditlimit of 1000 or less

CREATE VIEW usacustomers AS SELECT * FROM customers WHERE country= 'usa'
SELECT * FROM usacustomers 
WHERE state = 'nv' AND creditlimit <= '1000'  
  
 
    
    
    
                     
     

                     
                     